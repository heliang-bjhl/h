{
  "name": "svn-interface",
  "description": "SVN Interface for Node.js",
  "keywords": [
    "svn",
    "subverstion"
  ],
  "version": "0.4.4",
  "licence": "MIT",
  "author": {
    "name": "Ian McCall",
    "email": "imccall@da-puck.com",
    "url": "http://www.da-puck.com/"
  },
  "contributors": [
    {
      "name": "George Petrov",
      "url": "http://www.dmxzone.com/"
    }
  ],
  "main": "./svn",
  "repository": {
    "type": "git",
    "url": "https://github.com/dapuck/node-svn-interface.git"
  },
  "homepage": "https://github.com/dapuck/node-svn-interface",
  "dependencies": {
    "xml2js": "~0.4.0"
  },
  "readme": "SVN Interface for Node.js\n=========================\n\nA programing interface to Subverstion for Node.js. Uses child process spawning to run commands. \nFor SVN commands that support it, this library uses the `--xml` option and parses the xml returned with \n[xml2js](https://github.com/Leonidas-from-XIV/node-xml2js).\n\n[![NPM](https://nodei.co/npm/svn-interface.png)](https://nodei.co/npm/svn-interface/)\n\nMost functions take 3 arguments\n------------------------------\n\n * working copy (wc) or files: (String|Array)\n * options: (Object)\n  * The keys should match the options from `svn help cmd` (without the - or --). The value will be the argument to the command. If an option does not take an argument (like `--dry-run`) the value should be `true`.\n  * Example: `{ \"username\": \"bob\", \"password\": \"a-secret\", 'dry-run': true }`\n  * If the value is an Array, the values in the array will be joined with a comma (,)\n  * There is one exception, the `cwd` option. The `cwd` option will be used for resolving relitive paths for files and working coppies.\n * callback (cb): (Function)\n  * Optional. Receives (error, result). \n\nAll of the functions now return the child process that is spawned.\n\nCurrently Implemented svn commands\n----------------------------------\n\n * add (files, options, cb) \n * blame (files, options, cb) \n * cat (files, options, cb) \n * changelist (files, name, options, cb) \n * checkout (url, path, options, cb) \n * cleanup (wc, options, cb) \n * commit (files, options, cb) \n * copy (src, dest, options, cb) \n * delete (files, options, cb) \n * diff (files, options, cb) \n * export (files, options, cb) \n * import (files, options, cb) \n * info (files, options, cb) \n * list (files, options, cb) \n * lock (files, options, cb) \n * log (files, options, cb) \n * merge (src, target, options, cb) \n * mergeinfo (src, target, options, cb) \n * mkdir (files, options, cb) \n * move (src, dest, options, cb) \n * patch (file, wc, options, cb) \n * revert (files, options, cb) \n * status (files, options, cb) \n * update (files, options, cb) \n\nFor any commands that have not been implemented yet, the `_execSVN` function is available. `_execSVN` takes the following:\n * cmd: (String). The svn command you want to use.\n * files: (String|Array). A list of files that will be added to the end (in order).\n * options: (Object) See above\n * callback (cb): (Function) Ditto\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dapuck/node-svn-interface/issues"
  },
  "_id": "svn-interface@0.4.4",
  "_shasum": "711065fad5aaf599b568c05dbeaab7ef916879fc",
  "_from": "svn-interface@",
  "_resolved": "https://registry.npmjs.org/svn-interface/-/svn-interface-0.4.4.tgz"
}
